# DuckDB, let's go ! ðŸ¦† 

## Installation

Vous pouvez utiliser DuckDB de plein de maniÃ¨res diffÃ©rentes. Ici on va tout faire en ligne de commande (CLI) mais vous Ãªtre encouragÃ©s Ã  tester les SDK de vos langages prÃ©fÃ©rÃ©s !  

DuckDB CLI est distribuÃ© sous forme de binaire standalone, tÃ©lÃ©chargeable directement sur [leur site documentaire](https://duckdb.org/docs/installation/?version=stable&environment=cli&platform=linux&download_method=direct&architecture=x86_64).  
Il est par ailleurs prÃ©installÃ© dans la majoritÃ© des environnements modernes de datascience dont les environnements lancÃ©s par [Onyxia](https://onyxia.sh)

## PremiÃ¨re utilisation

Lancer `duckdb` :  

```shell
gon@laboitemagique:~$ duckdb
v1.2.2 7c039464e4
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.
```  

On constate bien que `duckdb` travaille uniquement en mÃ©moire (`transient in-memory database`). Toutes les donnÃ©es seront donc perdues Ã  la fin de la session.  
Si on veut qu'il sauvegarde ses tables, on peut prÃ©ciser un fichier de database au moment du lancement `duckdb madb.db` ou Ã  chaud pendant une session : `.open madb.db`.  

## Hello world  

https://duckdb.org/docs/stable/sql/introduction.html 


## Optionnel : configuration 

Pour configurer la CLI vous avez la possibilitÃ© de crÃ©er un fichier `.duckdbrc` Ã  la racine de votre rÃ©pertoire personnel ($HOME). Ce fichier vous permettra d'exÃ©cuter du code au lancement de votre session duckdb.

```
.prompt 'duckdb>'
CREATE OR REPLACE SECRET secret ( TYPE s3, PROVIDER credential_chain, CHAIN "env;config", PROFILE 'default',  ENDPOINT "minio.lab.sspcloud.fr" );
```

